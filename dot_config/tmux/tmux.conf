# ==========================
# ===  General settings  ===
# ==========================

set -g default-terminal "screen-256color"
set -g history-limit 20000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename on
setw -g automatic-rename on
setw -g aggressive-resize on
set -g detach-on-destroy off  # don't exit from tmux when closing a session
# Change prefix key to C-a, easier to type, same to "screen"
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on
# ==========================
# ===   Key bindings     ===
# ==========================
bind | split-window -hc "#{pane_current_path}"
bind - split-window -vc "#{pane_current_path}"
unbind '"'
unbind %

bind C-r source-file ~/.tmux.conf \; display "Config reloaded"
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

unbind z
bind z resize-pane -Z

bind x kill-pane
bind X kill-window

bind d detach
# bind D if -F '#{session_many_attached}' \
#     'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
#     'display "Session has only 1 client attached"'


# pane movement

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-Left if -F "#{@pane-is-vim}" 'send-keys C-Left'  'select-pane -L'
bind-key -n C-Down if -F "#{@pane-is-vim}" 'send-keys C-Down'  'select-pane -D'
bind-key -n C-Up if -F "#{@pane-is-vim}" 'send-keys C-Right'  'select-pane -U'
bind-key -n C-Right if -F "#{@pane-is-vim}" 'send-keys C-Left'  'select-pane -R'

# sessions
# bind-key "T" run-shell "sesh connect \"$(
# 	sesh list | fzf-tmux -p 55%,60% \
# 		--no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
# 		--header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
# 		--bind 'tab:down,btab:up' \
# 		--bind 'ctrl-b:change-prompt(‚ö°  )+reload(sesh list)' \
# 		--bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
# 		--bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
# 		--bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
# 		--bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 5 -t d -E .Trash . ~)' \
# 		--bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
# )\""

# Visuals

# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# clock mode
setw -g clock-mode-colour colour1

# copy mode
setw -g mode-style 'fg=colour2 bg=colour18 bold'

# pane borders
set -g pane-border-style 'fg=colour1'
set -g pane-active-border-style 'fg=colour3'

# statusbar
set -g status-position top
set -g status-justify left
set -g status-style 'fg=colour1'
set -g status-left ''
set -g status-right '%Y-%m-%d %H:%M '
set -g status-right-length 50
set -g status-left-length 10

setw -g window-status-current-style 'fg=colour15 bg=colour4 bold'
setw -g window-status-current-format ' #I #W #F '

setw -g window-status-style 'fg=colour1 dim'
setw -g window-status-format ' #I #[fg=colour7]#W #[fg=colour1]#F '

setw -g window-status-bell-style 'fg=colour2 bg=colour1 bold'

# messages
set -g message-style 'fg=colour2 bg=colour0 bold'

# =====================================
# ===        Renew environment      ===
# =====================================
# set -g update-environment \
#   "DISPLAY\
#   SSH_ASKPASS\
#   SSH_AUTH_SOCK\
#   SSH_AGENT_PID\
#   SSH_CONNECTION\
#   SSH_TTY\
#   WINDOWID\
#   XAUTHORITY"
#
# bind '$' run "~/.tmux/renew_env.sh"


# ============================
# ===       Plugins        ===
# ============================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'thesast/tmux-transient-status'

set -g @transient-status-delay '0'
set -g @transient-status-stall '0'

# Run all plugins' scripts
run '~/.tmux/plugins/tpm/tpm'

# prefix-g: asks which session, switches into it
# prefix-C: create new by name
# prefix-X: kill current, don't detach
# prefix-S: switch to last session
# prefix-@: promote pane into own session
# prefix-ctrl-@: same, but window
# run-shell ~/.tmux/plugins/tmux-sessionist/sessionist.tmux
run-shell ~/.tmux/plugins/tmux-which-key/plugin.sh.tmux
