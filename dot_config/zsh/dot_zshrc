#!/usr/bin/env zsh

# Created by Zap installer
[ -f "${XDG_DATA_HOME:-${ZDOTDIR}/.local/share}/zap/zap.zsh" ] && source "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh"
# Load and initialise brew-provided completions
if type brew &>/dev/null
then
    FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

    # Check if completion directories exist before initialization
    if [[ -d $(brew --prefix)/share/zsh/site-functions ]]; then
        # Skip nonexistent files in compinit
        autoload -Uz compinit
        compinit -i
    else
        autoload -Uz compinit
        compinit
    fi
else
    autoload -Uz compinit
    compinit
fi

launchctl setenv PATH $PATH
. "$HOME/.cargo/env"
# Source ancillary files
source <(fzf --zsh)
source "${ZDOTDIR}/aliases.zsh"
source "${ZDOTDIR}/functions.zsh"
source "${ZDOTDIR}/keys.zsh"
source "${ZDOTDIR}/cmp-sources/cmp-glow.zsh"
source "${ZDOTDIR}/cmp-sources/cmp-fzf.zsh"
source "${ZDOTDIR}/cmp-sources/cmp-chez.zsh"
test -e "${ZDOTDIR}/.iterm2_shell_integration.zsh" && source "${ZDOTDIR}/.iterm2_shell_integration.zsh"

# init CLI tools
eval "$(atuin init zsh --disable-up-arrow)"
eval "$(pyenv init -)"
eval "$(zoxide init zsh)"

if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

[ -f $HOMEBREW_PREFIX/share/forgit/forgit.plugin.zsh ] && source $HOMEBREW_PREFIX/share/forgit/forgit.plugin.zsh   

if [[ "${widgets[zle-keymap-select]#user:}" == "starship_zle-keymap-select" || \
      "${widgets[zle-keymap-select]#user:}" == "starship_zle-keymap-select-wrapped" ]]; then
    zle -N zle-keymap-select "";
fi

eval "$(starship init zsh)"

# autoload -Uz add-zsh-hook
#
# zle-line-init() {
#     emulate -L zsh
#
#     [[ $CONTEXT == start ]] || return 0
#
#     while true; do
#       zle .recursive-edit
#       local -i ret=$?
#       [[ $ret == 0 && $KEYS == $'\4' ]] || break
#       [[ -o ignore_eof ]] || exit 0
#     done
#
#     local saved_prompt=$PROMPT
#     local saved_rprompt=$RPROMPT
#
#     PROMPT=$'\e[93m‚ùØ \e[0m\e[93m'
#     RPROMPT=$'\e[0m'
#
#     zle .reset-prompt
#
#     PROMPT=$saved_prompt
#     RPROMPT=$saved_rprompt
#
#     if (( ret )); then
#       zle .send-break
#     else
#       zle .accept-line
#     fi
#     return ret
# }
#
# fix-prompt-bottom() {
#   local term_lines=$(tput lines)  # Total number of terminal lines
#
#   # Move the cursor to last line
#   print -n "\e[${term_lines};H"
#
#   # Ensures that ZLE is active before redrawing the prompt
#   [[ -n $ZLE ]] && zle reset-prompt
# }
#
# zle -N zle-line-init
#
# add-zsh-hook precmd fix-prompt-bottom

# plugins
plug "aloxaf/fzf-tab"
plug "freed-wu/fzf-tab-source"
plug "zsh-users/zsh-autosuggestions"
plug "zsh-users/zsh-syntax-highlighting"
plug "zsh-users/zsh-history-substring-search"

# Directory history
setopt AUTO_PUSHD                  # pushes the old directory onto the stack
setopt PUSHD_MINUS                 # exchange the meanings of '+' and '-'
setopt CDABLE_VARS                 # expand the expression (allows 'cd -2/tmp')
setopt extended_glob

# fzf-tab
zstyle ':completion:*:directory-stack' list-colors '=(#b) #([0-9]#)*( *)==95=38;5;12'
zstyle ':completion:*:git-checkout:*' sort false
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' menu no

zstyle ':fzf-tab:*' fzf-command fzf
# zstyle ':fzf-tab:*' fzf-flags '--preview-window=down,30%'
zstyle ':fzf-tab:*' switch-group '<' '>'
zstyle ':fzf-tab:*' popup-min-size 80 80
zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath}'

# for the odd project with intel only dependencies
if [[ $(arch) == arm64 ]]; then
    export PATH="/$HOME/.pyenv/shims:$PATH"
    export PYENV_ROOT="$HOME/.pyenv"
else
    export PATH="/$HOME/.pyenv-i386/shims:$PATH"
    export PYENV_ROOT="$HOME/.pyenv-i386"
fi
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"

export PATH="$HOME/Library/Python/3.13/bin:$PATH"

# >>> juliaup initialize >>>

# !! Contents within this block are managed by juliaup !!

path=('/Users/brettfeltmate/.juliaup/bin' $path)
export PATH

# <<< juliaup initialize <<<


# Environment variables
export BAT_THEME="ansi"
export DYLD_LIBRARY_PATH="$(brew --prefix)/lib:$DYLD_LIBRARY_PATH"
export DYLD_FALLBACK_LIBRARY_PATH="$(brew --prefix)/lib:$DYLD_FALLBACK_LIBRARY_PATH"
export MANPAGER='nvim +Man!'
export PAGER='nvim +Man!'
export MOZ_DISABLE_SAFE_MODE_KEY=1
export STARSHIP_LOG=error
export CLIPBOARD_THEME=ansi
export EZA_GRID_ROWS=15
export LESS='-R'  # interpret color characters
export PATH="$HOME/go/bin:$PATH"
export DISABLE_AUTO_TITLE="true"
export LESSOPEN="|lesspipe.sh %s"
